# This is a basic workflow to help you get started with Actions
name: Build

# Controls when the action will run. Triggers the workflow on push
on: 
  push:
  pull_request:
  release:
    # tags:
    # - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: 
        - {
            name: "Ubuntu_Latest_GCC",
            os: ubuntu-latest,
            artifact: "ubuntu_gcc.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Ninja",
            prefix_path: ""
          }
        - {
            name: "macOS Latest Clang",
            os: macos-latest,
            artifact: "macos_clang.7z",
            build_type: "Release",
            cc: "clang",
            cxx: "clang++",
            archiver: "7za a",
            generators: "Ninja",
            prefix_path: ""
          }

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu_Latest_GCC')
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl tar pkg-config
          sudo apt-get -y --force-yes install \
            autoconf \
            automake \
            cmake \
            frei0r-plugins-dev \
            gawk \
            libass-dev \
            libfreetype6-dev \
            libopencore-amrnb-dev \
            libopencore-amrwb-dev \
            libsdl1.2-dev \
            libspeex-dev \
            libssl-dev \
            libtheora-dev \
            libtool \
            libva-dev \
            libvdpau-dev \
            libvo-amrwbenc-dev \
            libvorbis-dev \
            libxvidcore-dev \
            texi2html \
            zlib1g-dev

      - name: Install dependencies on macOS
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install cmake automake libtool openssl
          cmake --version
          
      - name: Configure and build
        shell: bash
        run: |
          ./build.sh

      - name: Pack
        shell: bash
        working-directory: target
        run: |
          pwd
          ls -laR
          ${{ matrix.config.archiver }} ../${{ matrix.config.artifact }} .
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: ${{ matrix.config.artifact }}
          name: ${{ matrix.config.artifact }}

      - name: Upload release asset
        if: github.event_name == 'release' && (github.event.action == 'published' || github.event.action == 'created')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ matrix.config.artifact }}
          asset_name: ${{ matrix.config.artifact }}.zip
          asset_content_type: application/zip